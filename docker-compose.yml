services:
  proxy:
    image: traefik:v3.2
    networks:
      - traefik-public
      - default
    ports:
      - "80:80"
      - "8090:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
      # Create web entrypoint listening on port 80
      - --entrypoints.web.address=:80
    labels:
      # Enable Traefik for this service, to make it available in the public network
      traefik.enable: true
      # Use the traefik-public network (declared below)
      traefik.docker.network: traefik-public

  db:
    image: mongo:latest
    volumes:
      - app-db-data:/data/db
    env_file:
      - .env
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      - "MONGO_INITDB_DATABASE=${MONGO_DB}"
      - "MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}"
      - "MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}"

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - MONGO_HOST=db
    build:
      context: ./backend
      dockerfile: Dockerfile
    command:
      - fastapi
      - run
      - --reload
      - "app/main.py"
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app
          ignore:
            - ./backend/.venv
            - .venv
        - path: ./backend/pyproject.toml
          action: rebuild
    labels:
      - traefik.enable=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=8000

  frontend:
    image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}'
    env_file:
      - .env
    ports:
      - "5173:5173"
    build:
      context: ./frontend
      dockerfile: Dockerfile.development
      args:
        FRONTEND_ENV: dev
    command: npm run dev -- --host
    develop:
      watch:
        - path: ./frontend
          action: sync
          target: /app
          ignore:
            - ./frontend/node_modules
            - node_modules
        - path: ./frontend/package.json
          action: rebuild
    labels:
      - traefik.enable=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.rule=PathPrefix(`/`)
      - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=5173

volumes:
  app-db-data:

networks:
  traefik-public:
    # For local dev, don't expect an external Traefik network
    external: false
